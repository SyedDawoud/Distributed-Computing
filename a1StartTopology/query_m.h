//
// Generated file, do not edit! Created by nedtool 5.1 from query.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __QUERY_M_H
#define __QUERY_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0501
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>query.msg:1</tt> by nedtool.
 * <pre>
 * message query
 * {
 *     int seq_id;
 *     int TTL;
 *     int hops;
 *     string source;
 *     string destination;
 *     string queriedData;
 *     string origin;
 *     bool location_found;
 * }
 * </pre>
 */
class query : public ::omnetpp::cMessage
{
  protected:
    int seq_id;
    int TTL;
    int hops;
    ::omnetpp::opp_string source;
    ::omnetpp::opp_string destination;
    ::omnetpp::opp_string queriedData;
    ::omnetpp::opp_string origin;
    bool location_found;

  private:
    void copy(const query& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const query&);

  public:
    query(const char *name=nullptr, short kind=0);
    query(const query& other);
    virtual ~query();
    query& operator=(const query& other);
    virtual query *dup() const override {return new query(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSeq_id() const;
    virtual void setSeq_id(int seq_id);
    virtual int getTTL() const;
    virtual void setTTL(int TTL);
    virtual int getHops() const;
    virtual void setHops(int hops);
    virtual const char * getSource() const;
    virtual void setSource(const char * source);
    virtual const char * getDestination() const;
    virtual void setDestination(const char * destination);
    virtual const char * getQueriedData() const;
    virtual void setQueriedData(const char * queriedData);
    virtual const char * getOrigin() const;
    virtual void setOrigin(const char * origin);
    virtual bool getLocation_found() const;
    virtual void setLocation_found(bool location_found);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const query& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, query& obj) {obj.parsimUnpack(b);}


#endif // ifndef __QUERY_M_H

